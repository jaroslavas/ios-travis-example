# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.97.2"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
#    cocoapods

  end

  desc "Runs all the tests"
  lane :test do
    scan
  end
  
  # -------------------- BETA (fabric.io) --------------------
  desc "Test and deploy"
  lane :deploy_fabric do

    # Setup app: name, bundle id, etc.
    read_app_data_from_env
    
    # Prepare certificates , keys and provisioning profiles
    match(type: "adhoc", force_for_new_devices: true, readonly: true)
    
    #Build
    gym(scheme:"testApp")
    
    # Deploy to fabric.io
    crashlytics(
                crashlytics_path: './Pods/Crashlytics',
                notifications: false,
                groups: 'test-group-me'
                )

  end
  
  # -------------------- RELEASE (AppStore) --------------------
  desc "Test and deploy"
  lane :deploy_appstore do
      
      # Setup app: name, bundle id, etc.
      read_app_data_from_env
      
      # Prepare certificates, keys and provisioning profiles
      match(type: "appstore", force_for_new_devices: true, readonly: true) # creates certificates if needed
      
      # Make screenshots
      snapshot
      
      #Build
      gym(scheme:"testApp", clean:true)
      
      # AT the moment please create the app manually
      # Create new app in the appstore if needed
      #      produce(
      #        username: ENV["DEPLOY_MATCH_USERNAME"],
      #        app_identifier: ENV["DEPLOY_PACKAGE_NAME"],
      #        app_name: ENV["DEPLOY_APPLICATION_NAME"],
      #        sku: ENV["DEPLOY_PACKAGE_NAME"],
      #        team_name: ENV["DEPLOY_APPSTORE_TEAM_NAME"] # Only necessary when in multiple teams.
      #        )
              
      # Deploy to AppStore
      deliver(
              force: true,
              submit_for_review: false
              )
              
  end
  

# Helper functions

# TODO: redo using these: https://github.com/fastlane/fastlane/blob/10f316756fb0b2c3e486b4fb3c26ac6393e32146/fastlane/docs/Actions.md#modifying-project

def set_app_name(app_name = nil)
    raise if app_name.nil?
    
    puts "Setting app name to #{app_name}"
    sh("/usr/libexec/PlistBuddy -c 'Set CFBundleName #{app_name}' ../testApp/Info.plist")
end



private_lane :read_app_data_from_env do |options|
    if ENV["DEPLOY_VERSION"]
        increment_version_number(version_number: ENV["DEPLOY_VERSION"]) # Set a specific version number
    end
    
    if ENV["DEPLOY_APPLICATION_NAME"]
        set_app_name(ENV["DEPLOY_APPLICATION_NAME"])
    end
    
    if ENV["DEPLOY_PACKAGE_NAME"]
        update_app_identifier(
                              #xcodeproj: 'Example.xcodeproj', # Optional path to xcodeproj, will use the first .xcodeproj if not set
                              plist_path: "testApp/Info.plist", # Path to info plist file, relative to xcodeproj
                              app_identifier: ENV["DEPLOY_PACKAGE_NAME"] # The App Identifier
                              )
    end
    
end





  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
