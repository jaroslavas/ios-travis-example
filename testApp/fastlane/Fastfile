# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.97.2"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
#    cocoapods

  end

  desc "Runs all the tests"
  lane :test do
    scan
  end
  
#  desc "Download and refresh profiles"
#  lane :match do
#      match(type: "development", force_for_new_devices: true)
#  end

  desc "Test and deploy"
  lane :beta do

    if ENV["DEPLOY_VERSION"]
        set_version_number(ENV["DEPLOY_VERSION"])
    end
    
    if ENV["DEPLOY_APPLICATION_NAME"]
        set_app_name(ENV["DEPLOY_APPLICATION_NAME"])
    end
    
#    cocoapods
    match(type: "adhoc", force_for_new_devices: true, readonly: true)
    
    # Prepare screenshots
    snapshot
    #Build and deploy app
    gym(scheme:"testApp")
    crashlytics(
                crashlytics_path: './Pods/Crashlytics',
                notifications: true
                )

  end
  
  

# Helper functions

# TODO: redo using these: https://github.com/fastlane/fastlane/blob/10f316756fb0b2c3e486b4fb3c26ac6393e32146/fastlane/docs/Actions.md#modifying-project
def set_build_number(build_number = nil)
    raise if build_number.nil?

    puts "Setting build number to #{build_number}"
    Actions.lane_context[SharedValues::BUILD_NUMBER] = build_number
    sh("/usr/libexec/PlistBuddy -c 'Set CFBundleVersion #{build_number}' ../testApp/Info.plist")
end

def set_version_number(version_number = nil)
    raise if version_number.nil?
    
    puts "Setting version number to #{version_number}"
    Actions.lane_context[SharedValues::VERSION_NUMBER] = version_number
    sh("/usr/libexec/PlistBuddy -c 'Set CFBundleShortVersionString #{version_number}' ../testApp/Info.plist")
end

def set_app_name(app_name = nil)
    raise if app_name.nil?
    
    puts "Setting app name to #{app_name}"
    sh("/usr/libexec/PlistBuddy -c 'Set CFBundleName #{app_name}' ../testApp/Info.plist")
end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
